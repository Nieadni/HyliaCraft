plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/hyliacraft.accesswidener")
}

repositories {
	maven {
		name = 'GeckoLib'
		url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
		content {
			includeGroup("software.bernie.geckolib")
		}
	}
	maven { url = "https://api.modrinth.com/maven" }
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Geckolib is needed for some models
	modImplementation "software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}"

	// Nie's Higher Build Limit is needed for some structure generation
	//modImplementation "maven.modrinth:${nies-higher-build-limit_project}:${nies-higher-build-limit_version}"

	// Worldedit for easier Building
	modRuntimeOnly "maven.modrinth:${worldedit_project}:${worldedit_version}"

	// JEI
	modRuntimeOnly "maven.modrinth:${jei_project}:${jei_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}